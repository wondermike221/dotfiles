[user]
	name = Michael Hixon
	email = michael.hixon@hotmail.com
[core]
	editor = nvim
[credential]
	helper = cache --timeout 7200
[color]
	ui = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = red

[diff]
	renames = copies

[url "https://github.com/"]
	insteadOf=gh:

[url "https://gist.github.com/"]
	insteadOf=gist:

[url "https://bitbucket.org/"]
	insteadOf=bb:

[pretty]
    slog = format:%C(yellow)%h %Cred%as %Cblue%an%Cgreen%d %Creset%s

[alias]
	# Pull with rebase
	pr = pull --rebase

	# For when you made that commit a bit too early, amend
	amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend

   	# Show all branches
	br = branch -av

	# Show the current branch name (usefull for shell prompts)
	brname = !git branch | grep "^*" | awk '{ print $2 }'

	# Delete a branch
	brdel = branch -D

	# Which files are receiving the most "love"
	churn = !git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count,file"} {print $1 "," $2}'

	# View the log and diff for a commit (previous if no SHA1 provided)
	details = log -n1 -p --format=fuller

	# Save a repo as a tarball
	export = archive -o latest.tar.gz -9 --prefix=latest/

	# Unstage changes from the index
	unstage = reset HEAD --

	# Return the repository's root directory (usefull for shell prompts)
	root = rev-parse --show-toplevel

	# Update all submodules
	subup = submodule update --init

	# List all tags
	tags = tag -l

	# Start a new local repository and perform initial commit
	this = !git init && git add . && git commit -m \"Initial commit.\"

	# Thin out older metadata within the repository, reduceses filesystem footprint
	trim = !git reflog expire --expire=now --all && git gc --prune=now

  s = status

  cm = commit -m

  sw = switch

  l1 = log -1 --pretty=slog
  l5 = log -5 --pretty=slog 
  slog = log --pretty=slog
  glog = log --graph --pretty=slog 
  outgoing = log --pretty=slog @{u}..
 
  amend = commit --amend
  untrack = rm --cached
  unadd = restore --staged


  # Diff of last commit
  dlc = diff --cached HEAD^ 

  # list all defined aliases
  aliases = config --get-regexp alias

  # Find very first commit
  first = rev-list --max-parents=0 HEAD

  # what would be merged
  incoming = log HEAD..@{upstream}

  # what would be pushed
  outgoing = log @{upstream}..HEAD
  outgoing = log @{u}..

  wdiff = diff -w --word-diff=color --ignore-space-at-eol

  structure = log --oneline --simplify-by-decoration --graph --all
